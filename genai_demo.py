# -*- coding: utf-8 -*-
"""GenAI_Demo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KXADfAKEY8OszFQdqcppSxtmaVFibAop

## Gen-AI hands-on with Google Gemini

**How to get API Key**

1. Go to https://aistudio.google.com/
2. If it is the first time you are logging, it may ask you to sign in with your email id.
3. On the left panel, Click on "Get API key".
4. Select "Create API key in a new project".
5. API Key will be generated.

**Add the generated API Key to the Collab Notebook**
1. In Colab, on the left panel go to the secrets manager - "üîë" symbol.
2. Click on " + Add new secret".
3. Give it the name GOOGLE_API_KEY and provide the generated API-KEY.
4. Toggle the "Notebook access" to enable the Colab notebook to access the Secret key.


*Reference -
https://github.com/google/generative-ai-docs/blob/main/site/en/tutorials/quickstart_colab.ipynb*

##First, we will install the necessary Gen-AI dependencies.
"""

!pip install -q -U google-generativeai

"""##Next, we will import the Python SDK and Setup the API KEY"""

import google.generativeai as genai
from google.colab import userdata

GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)

"""##Now, initialize the Gemini Model and try generating a text!"""

model = genai.GenerativeModel('gemini-pro')

response = model.generate_content("Tell me a story on which came first, the chicken or the egg?")
print(response.text)

response = model.generate_content("Tell me a story on girls who code")
print(response.text)

"""##Lets play around with some parameters we learned about earlier"""

config = {  "temperature": 0.3,
            "top_k": 10,
            "max_output_tokens": 128
          }

response = model.generate_content("Tell me a story on which came first, the chicken or the egg?",
                                  generation_config=config
                                  )
print(response.text)

config = {  "temperature": 2,
            "top_k": 10,
            "max_output_tokens": 64
          }

response = model.generate_content("Tell me a story on which came first, the chicken or the egg?",
                                  generation_config=config
                                  )
print(response.text)

config = {  "temperature": 0.3,
            "top_k": 10,
            "max_output_tokens": 128
          }

response = model.generate_content("Tell me a story about girls who code",
                                  generation_config=config
                                  )
print(response.text)

config = {  "temperature": 2,
            "top_k": 10,
            "max_output_tokens": 64
          }

response = model.generate_content("Tell me a story about girls who code",
                                  generation_config=config
                                  )
print(response.text)

"""##Below are the default values for the parameters of the Gemini LLMs"""

import pprint
for model in genai.list_models():
    pprint.pprint(model)

"""##Image recognition

Now lets see how we can pass images when prompting to Gemini to generate image descriptions

On Colab, lets upload a few images using the files üìÅ in left panel
"""

import PIL.Image

baby = PIL.Image.open('Baby.png')
dog = PIL.Image.open('Dog.png')
zebra = PIL.Image.open('Zebra.png')
bird = PIL.Image.open('Bird.png')

baby

"""##Lets switch to "gemini-pro-vision", since "gemini-pro" doesn't support the image modality"""

model = genai.GenerativeModel('gemini-pro-vision')

"""##Also, lets define the safety settings to ensure that the response is not blocked


The Gemini API's adjustable safety filters cover the following categories:

**Harassment** - Negative or harmful comments targeting identity and/or protected attributes.

**Hate speech**	- Content that is rude, disrespectful, or profane.

**Sexually explicit**	- Contains references to sexual acts or other lewd content.

**Dangerous**	- Promotes, facilitates, or encourages harmful acts.
"""

safety_settings = [
  {
    "category": "HARM_CATEGORY_HARASSMENT",
    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
  },
  {
    "category": "HARM_CATEGORY_HATE_SPEECH",
    "threshold": "BLOCK_MEDIUM_AND_ABOVE"
  },
  {
    "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
    "threshold": "BLOCK_ONLY_HIGH"
  },
  {
    "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
    "threshold": "BLOCK_ONLY_HIGH"
  }
]

"""##Now, lets prompt the gemini-pro-vision model with the safety settings configuration"""

response = model.generate_content(
    [ "Describe this image",
       baby
    ],
    safety_settings = safety_settings
   )
print(response.text)

response = model.generate_content(
    [ "Describe this image",
       dog
    ],
    safety_settings = safety_settings
   )
print(response.text)

response = model.generate_content([
    "When we make a funny mixed image using these 2 images, what will the output look like?",
    baby,
    dog
],
    safety_settings = safety_settings)
response.resolve()
print(response.text)

response = model.generate_content([
    "when we make a funny mixed image using these 2 images, what will the output look like?",
    zebra,
    bird
],
    safety_settings = safety_settings)
response.resolve()
print(response.text)

"""#Gen-AI hands-on with OpenAI DALL-E

###(Paid version)

**How to get API Key**

1. Go to https://platform.openai.com/
2. If it is the first time you are logging, it may ask you to sign in with your email id.
3. Go to Dashboard. On the left panel, Click on "API keys".
4. Select "Create new secret key".
5. API Key will be generated.

**Add the generated API Key to the Collab Notebook**

1. In Colab, on the left panel go to the secrets manager - "üîë" symbol.
2. Click on " + Add new secret".
3. Give it the name OPENAI_API_KEY and provide the generated API-KEY.
4. Toggle the "Notebook access" to enable the Colab notebook to access the Secret key.


*References - https://platform.openai.com/docs/api-reference/introduction?lang=python*

##First, we will install the necessary Gen-AI dependencies.
"""

!pip install openai

"""##Next, we will Setup the API KEY"""

from google.colab import userdata
from openai import OpenAI
import matplotlib.pyplot as plt
import os

OPENAI_API_KEY=userdata.get('OPENAI_API_KEY')

client = OpenAI(
    api_key=OPENAI_API_KEY
)

"""##Now, try generating an image from the prompt!"""

response = client.images.generate(
  prompt="A baby elephant playing with a soccer ball",
  n=1,
  size="512x512"
)

response

"""##How creative can you be?"""

response = client.images.generate(
  prompt="Generate a realistic picture of a lion riding a bicycle wearing a pirate hat and eating a pizza",
  model="dall-e-3",
  n=1,
  size="1024x1024"
)

response

response = client.images.generate(
  prompt="A group of dinosaurs eating popcorn in a movie theater and watching Jurassic Park film",
  model="dall-e-3",
  n=1,
  size="1024x1024"
)

response

"""##Create variations of a given image"""

response = client.images.create_variation(
  model="dall-e-2",
  image=open("Flower.png", "rb"),
  n=2,
  size="512x512"
)

response